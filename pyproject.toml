[tool.poetry]
name = "kiez"
version = "0.3.1"
description = "Hubness reduced nearest neighbor search for entity alignment with knowledge graph embeddings"
authors = ["Daniel Obraczka <obraczka@informatik.uni-leipzig.de>"]
license = "BSD"
readme = "README.md"
repository = "https://github.com/dobraczka/kiez"
documentation = "https://kiez.readthedocs.io/"
keywords = ["embedding","hubness", "knowledge graph", "entity resolution", "approximate nearest neighbor search", "nearest neighbors", "knowledge graph embedding"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: BSD License",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries"
]

[tool.poetry.dependencies]
python = "^3.7.1"
scikit-learn = ">=0.24.1<2.0.0"
pandas = "^1.3.4"
joblib = ">=0.12"
numpy = "~1.21"
tqdm = "~4.56"
scipy = ">=1.2"
importlib-metadata = "^4.5.0;python_version<3.8"
class-resolver = "^0.1.0"
ngt = {version = ">=1.8", optional = true}
annoy = {version = "^1.17.0", optional = true}
nmslib = {version = "^2.1.1", optional = true}
Sphinx = {version = "^4.3.0", optional = true}
insegel = {version = "^1.3.1", optional = true}

[tool.poetry.dev-dependencies]
ipdb = "~0.13"
mypy = "~0.800"
pytest = "~6.2.2"
pytest-cov = "~2.11.1"
pyproject-flake8 = "~0.0.1-alpha.2"
flake8-eradicate = "~1.2.0"
flake8-isort = "~4.1.0"
flake8-debugger = "~4.0.0"
flake8-comprehensions = "~3.7.0"
flake8-print = "~4.0.0"
nox-poetry = "~0.9.0"
black = "^21.11b1"

[tool.poetry.extras]
docs = ["sphinx", "insegel"]
all = ["ngt","annoy","nmslib"]
ngt = ["ngt"]
nmslib = ["nmslib"]
annoy = ["annoy"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
ignore = "E203, E266, E501, W503, F403, F401, B950"
max-line-length = 88
max-complexity = 18
select = "B,C,E,F,W,T4,B9"
count = "true"
show-source = "true"
statistics = "true"

[tool.black]
line-length = 88
experimental-string-processing = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
